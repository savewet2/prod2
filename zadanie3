import sqlite3  # –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite
from tkinter import *  # –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ tkinter –¥–ª—è GUI
from tkinter import ttk, messagebox  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã tkinter –∏ –¥–∏–∞–ª–æ–≥–æ–≤—ã–µ –æ–∫–Ω–∞

class PhoneBook:
    def __init__(self, root):
        self.root = root  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.root.title("üìû –ú–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫")  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞
        self.root.geometry("800x600")  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞
        self.root.configure(bg='#f0f8ff')  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –æ–∫–Ω–∞
        
        self.conn = sqlite3.connect('phonebook.db')  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
        self.c = self.conn.cursor()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
        self.create_table()  # –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        
        self.setup_ui()  # –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.view_all()  # –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤

    def create_table(self):
        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        self.c.execute('''CREATE TABLE IF NOT EXISTS contacts (
                            id INTEGER PRIMARY KEY AUTOINCREMENT,  # –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ–º—ã–π –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á
                            name TEXT NOT NULL,  # –ü–æ–ª–µ –¥–ª—è –∏–º–µ–Ω–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
                            phone TEXT NOT NULL,  # –ü–æ–ª–µ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
                            email TEXT)''')  # –ü–æ–ª–µ –¥–ª—è email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
        self.conn.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

    def setup_ui(self):
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = Label(self.root, text="üìí –¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞", 
                          font=('Arial', 18, 'bold'), bg='#f0f8ff', fg='#2c3e50')  # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title_label.pack(pady=15)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –º–µ—Ç–∫–∏ —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏

        # –ü–∞–Ω–µ–ª—å –ø–æ–∏—Å–∫–∞
        search_frame = Frame(self.root, bg='#f0f8ff')  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        search_frame.pack(pady=10)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ –ø–æ–∏—Å–∫–∞
        
        Label(search_frame, text="üîç –ü–æ–∏—Å–∫:", font=('Arial', 10), bg='#f0f8ff').pack(side=LEFT, padx=5)  # –ú–µ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
        
        self.search_entry = Entry(search_frame, width=30, font=('Arial', 10))  # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        self.search_entry.pack(side=LEFT, padx=5)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
        self.search_entry.bind('<KeyRelease>', self.search_contact)  # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è –∫ –ø–æ–∏—Å–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
        
        Button(search_frame, text="–û—á–∏—Å—Ç–∏—Ç—å", command=self.clear_search, 
               bg='#e74c3c', fg='white', font=('Arial', 9)).pack(side=LEFT, padx=5)  # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–∏—Å–∫–∞

        # –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
        table_frame = Frame(self.root)  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        table_frame.pack(pady=10, padx=20, fill=BOTH, expand=True)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ —Ç–∞–±–ª–∏—Ü—ã
        
        # –°—Ç–∏–ª—å –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        style = ttk.Style()  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å—Ç–∏–ª—è
        style.configure("Treeview", font=('Arial', 10), rowheight=25)  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è —Ç–∞–±–ª–∏—Ü—ã
        style.configure("Treeview.Heading", font=('Arial', 11, 'bold'))  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ç–∞–±–ª–∏—Ü—ã
        
        self.tree = ttk.Treeview(table_frame, columns=('ID', 'Name', 'Phone', 'Email'), 
                               show='headings', height=12)  # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ —Ç–∞–±–ª–∏—Ü—ã
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
        columns = {
            'ID': ('ID', 50),  # –ö–æ–ª–æ–Ω–∫–∞ ID —à–∏—Ä–∏–Ω–æ–π 50px
            'Name': ('–§–ò–û', 200),  # –ö–æ–ª–æ–Ω–∫–∞ –∏–º–µ–Ω–∏ —à–∏—Ä–∏–Ω–æ–π 200px
            'Phone': ('–¢–µ–ª–µ—Ñ–æ–Ω', 150),  # –ö–æ–ª–æ–Ω–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —à–∏—Ä–∏–Ω–æ–π 150px
            'Email': ('Email', 250)  # –ö–æ–ª–æ–Ω–∫–∞ email —à–∏—Ä–∏–Ω–æ–π 250px
        }
        
        for col, (text, width) in columns.items():
            self.tree.heading(col, text=text)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∫–æ–ª–æ–Ω–æ–∫
            self.tree.column(col, width=width, anchor='center')  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∏—Ä–∏–Ω—ã –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
        
        # –°–∫—Ä–æ–ª–ª–±–∞—Ä –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        scrollbar = ttk.Scrollbar(table_frame, orient=VERTICAL, command=self.tree.yview)  # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞
        self.tree.configure(yscrollcommand=scrollbar.set)  # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ
        scrollbar.pack(side=RIGHT, fill=Y)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞ —Å–ø—Ä–∞–≤–∞
        self.tree.pack(side=LEFT, fill=BOTH, expand=True)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–ª–µ–≤–∞
        
        # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤—ã–±–æ—Ä–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
        self.tree.bind('<<TreeviewSelect>>', self.on_select)  # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏

        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
        control_frame = Frame(self.root, bg='#f0f8ff')  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_frame.pack(pady=15)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        
        # –ü–æ–ª—è –≤–≤–æ–¥–∞
        input_frame = Frame(control_frame, bg='#f0f8ff')  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        input_frame.pack(pady=10)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        
        self.entries = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
        fields = [
            ("üë§ –§–ò–û", "name", 0),  # –ü–æ–ª–µ –∏–º–µ–Ω–∏ –≤ —Å—Ç—Ä–æ–∫–µ 0
            ("üìû –¢–µ–ª–µ—Ñ–æ–Ω", "phone", 1),  # –ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ 1
            ("üìß Email", "email", 2)  # –ü–æ–ª–µ email –≤ —Å—Ç—Ä–æ–∫–µ 2
        ]
        
        for text, key, row in fields:
            Label(input_frame, text=text, font=('Arial', 10), bg='#f0f8ff').grid(row=row, column=0, padx=5, pady=5, sticky='e')  # –ú–µ—Ç–∫–∞ –ø–æ–ª—è
            entry = Entry(input_frame, width=25, font=('Arial', 10))  # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
            entry.grid(row=row, column=1, padx=5, pady=5)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
            self.entries[key] = entry  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª–µ –≤ —Å–ª–æ–≤–∞—Ä–µ

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        button_frame = Frame(control_frame, bg='#f0f8ff')  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        button_frame.pack(pady=10)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ –∫–Ω–æ–ø–æ–∫
        
        buttons = [
            ("‚úÖ –î–æ–±–∞–≤–∏—Ç—å", '#27ae60', self.add_contact),  # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–∑–µ–ª–µ–Ω–∞—è)
            ("‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å", '#f39c12', self.update_contact),  # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–æ—Ä–∞–Ω–∂–µ–≤–∞—è)
            ("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", '#e74c3c', self.delete_contact),  # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è (–∫—Ä–∞—Å–Ω–∞—è)
            ("üßπ –û—á–∏—Å—Ç–∏—Ç—å", '#95a5a6', self.clear_entries)  # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ (—Å–µ—Ä–∞—è)
        ]
        
        for i, (text, color, command) in enumerate(buttons):
            Button(button_frame, text=text, command=command, 
                   bg=color, fg='white', font=('Arial', 10, 'bold'),
                   width=12, height=1).grid(row=0, column=i, padx=8)  # –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫

    def on_select(self, event):
        """–ó–∞–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ"""
        if selected := self.tree.selection():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (walrus operator)
            values = self.tree.item(selected[0])['values']  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            for entry, value in zip(self.entries.values(), values[1:]):  # –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–æ–ª—è–º –≤–≤–æ–¥–∞ (–ø—Ä–æ–ø—É—Å–∫–∞—è ID)
                entry.delete(0, END)  # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
                entry.insert(0, value)  # –í—Å—Ç–∞–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞

    def add_contact(self):
        name = self.entries['name'].get().strip()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏
        phone = self.entries['phone'].get().strip()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        email = self.entries['email'].get().strip()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ email
        
        if name and phone:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            self.c.execute("INSERT INTO contacts (name, phone, email) VALUES (?, ?, ?)", 
                          (name, phone, email))  # SQL-–∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            self.conn.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            self.view_all()  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            self.clear_entries()  # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        else:
            messagebox.showwarning("–û—à–∏–±–∫–∞", "–ü–æ–ª—è '–§–ò–û' –∏ '–¢–µ–ª–µ—Ñ–æ–Ω' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

    def delete_contact(self):
        if selected := self.tree.selection():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            contact_id = self.tree.item(selected[0])['values'][0]  # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            if messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç?"):  # –î–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                self.c.execute("DELETE FROM contacts WHERE id=?", (contact_id,))  # SQL-–∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
                self.conn.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                self.view_all()  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
                self.clear_entries()  # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        else:
            messagebox.showwarning("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

    def update_contact(self):
        if selected := self.tree.selection():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            contact_id = self.tree.item(selected[0])['values'][0]  # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            name = self.entries['name'].get().strip()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏
            phone = self.entries['phone'].get().strip()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            email = self.entries['email'].get().strip()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ email
            
            if name and phone:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
                self.c.execute("UPDATE contacts SET name=?, phone=?, email=? WHERE id=?", 
                              (name, phone, email, contact_id))  # SQL-–∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                self.conn.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                self.view_all()  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
                messagebox.showinfo("–£—Å–ø–µ—Ö", "–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            else:
                messagebox.showwarning("–û—à–∏–±–∫–∞", "–ü–æ–ª—è '–§–ò–û' –∏ '–¢–µ–ª–µ—Ñ–æ–Ω' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        else:
            messagebox.showwarning("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

    def search_contact(self, event=None):
        """–ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º –ø–æ–ª—è–º (–§–ò–û, —Ç–µ–ª–µ—Ñ–æ–Ω, email)"""
        search_term = self.search_entry.get().strip()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        if search_term:  # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
            self.c.execute('''SELECT * FROM contacts 
                           WHERE name LIKE ? OR phone LIKE ? OR email LIKE ?''',  # SQL-–∑–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞
                          (f'%{search_term}%', f'%{search_term}%', f'%{search_term}%'))  # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
            self.update_treeview(self.c.fetchall())  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
        else:
            self.view_all()  # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã

    def clear_search(self):
        self.search_entry.delete(0, END)  # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
        self.view_all()  # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã

    def view_all(self):
        self.c.execute("SELECT * FROM contacts ORDER BY name")  # SQL-–∑–∞–ø—Ä–æ—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π
        self.update_treeview(self.c.fetchall())  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã

    def update_treeview(self, rows):
        self.tree.delete(*self.tree.get_children())  # –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
        for row in rows:
            self.tree.insert('', 'end', values=row)  # –í—Å—Ç–∞–≤–∫–∞ —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É

    def clear_entries(self):
        for entry in self.entries.values():
            entry.delete(0, END)  # –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤–≤–æ–¥–∞

if __name__ == '__main__':
    root = Tk()  # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app = PhoneBook(root)  # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    root.mainloop()  # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
