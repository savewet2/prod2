# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å MySQL
import mysql.connector
# –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ tkinter
from tkinter import * 
# –ò–º–ø–æ—Ä—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤ tkinter –∏ –¥–∏–∞–ª–æ–≥–æ–≤—ã—Ö –æ–∫–æ–Ω
from tkinter import ttk, messagebox

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class PhoneBook:
    # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    def __init__(self, root):
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.root = root
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞
        self.root.title("üìû –ú–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫")
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞
        self.root.geometry("800x600")
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –æ–∫–Ω–∞
        self.root.configure(bg='#f0f8ff')
        
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å MySQL
            self.conn = mysql.connector.connect(
                host='localhost',      # –•–æ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                user='root',           # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                password='root',       # –ü–∞—Ä–æ–ª—å
                database='phonebook_db' # –ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            )
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
            self.c = self.conn.cursor()
            # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            self.create_table()
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
        except mysql.connector.Error as err:
            # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            messagebox.showerror("–û—à–∏–±–∫–∞ –ë–î", f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MySQL: {err}")
            return
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.setup_ui()
        # –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É
        self.view_all()

    # –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    def create_table(self):
        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        self.c.execute('''CREATE TABLE IF NOT EXISTS contacts (
                            id INTEGER PRIMARY KEY AUTO_INCREMENT,  # –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ–º—ã–π –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á
                            name VARCHAR(255) NOT NULL,             # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –∏–º–µ–Ω–∏
                            phone VARCHAR(20) NOT NULL,             # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                            email VARCHAR(255))''')                 # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ email
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î
        self.conn.commit()

    # –ú–µ—Ç–æ–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    def setup_ui(self):
        # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        title_label = Label(self.root, text="üìí –¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞", 
                          font=('Arial', 18, 'bold'), bg='#f0f8ff', fg='#2c3e50')
        title_label.pack(pady=15)

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        search_frame = Frame(self.root, bg='#f0f8ff')
        search_frame.pack(pady=10)
        
        # –ú–µ—Ç–∫–∞ –¥–ª—è –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
        Label(search_frame, text="üîç –ü–æ–∏—Å–∫:", font=('Arial', 10), bg='#f0f8ff').pack(side=LEFT, padx=5)
        
        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        self.search_entry = Entry(search_frame, width=30, font=('Arial', 10))
        self.search_entry.pack(side=LEFT, padx=5)
        # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –∫–ª–∞–≤–∏—à–∏ –∫ –ø–æ–∏—Å–∫—É
        self.search_entry.bind('<KeyRelease>', self.search_contact)
        
        # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–∏—Å–∫–∞
        Button(search_frame, text="–û—á–∏—Å—Ç–∏—Ç—å", command=self.clear_search, 
               bg='#e74c3c', fg='white', font=('Arial', 9)).pack(side=LEFT, padx=5)

        # –§—Ä–µ–π–º –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        table_frame = Frame(self.root)
        table_frame.pack(pady=10, padx=20, fill=BOTH, expand=True)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è —Ç–∞–±–ª–∏—Ü—ã
        style = ttk.Style()
        style.configure("Treeview", font=('Arial', 10), rowheight=25)
        style.configure("Treeview.Heading", font=('Arial', 11, 'bold'))
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã (Treeview)
        self.tree = ttk.Treeview(table_frame, columns=('ID', 'Name', 'Phone', 'Email'), 
                               show='headings', height=12)
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
        columns = {
            'ID': ('ID', 50),           # –ö–æ–ª–æ–Ω–∫–∞ ID —à–∏—Ä–∏–Ω–æ–π 50px
            'Name': ('–§–ò–û', 200),       # –ö–æ–ª–æ–Ω–∫–∞ –∏–º–µ–Ω–∏ —à–∏—Ä–∏–Ω–æ–π 200px  
            'Phone': ('–¢–µ–ª–µ—Ñ–æ–Ω', 150),  # –ö–æ–ª–æ–Ω–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —à–∏—Ä–∏–Ω–æ–π 150px
            'Email': ('Email', 250)     # –ö–æ–ª–æ–Ω–∫–∞ email —à–∏—Ä–∏–Ω–æ–π 250px
        }
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –∫–æ–ª–æ–Ω–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
        for col, (text, width) in columns.items():
            self.tree.heading(col, text=text)      # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            self.tree.column(col, width=width, anchor='center')  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∏—Ä–∏–Ω—ã –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        scrollbar = ttk.Scrollbar(table_frame, orient=VERTICAL, command=self.tree.yview)
        self.tree.configure(yscrollcommand=scrollbar.set)
        scrollbar.pack(side=RIGHT, fill=Y)
        self.tree.pack(side=LEFT, fill=BOTH, expand=True)
        
        # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏
        self.tree.bind('<<TreeviewSelect>>', self.on_select)

        # –§—Ä–µ–π–º –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_frame = Frame(self.root, bg='#f0f8ff')
        control_frame.pack(pady=15)
        
        # –§—Ä–µ–π–º –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        input_frame = Frame(control_frame, bg='#f0f8ff')
        input_frame.pack(pady=10)
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
        self.entries = {}
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        fields = [
            ("üë§ –§–ò–û", "name", 0),      # –ü–æ–ª–µ –∏–º–µ–Ω–∏ –≤ —Å—Ç—Ä–æ–∫–µ 0
            ("üìû –¢–µ–ª–µ—Ñ–æ–Ω", "phone", 1), # –ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ 1
            ("üìß Email", "email", 2)    # –ü–æ–ª–µ email –≤ —Å—Ç—Ä–æ–∫–µ 2
        ]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ –∏ –º–µ—Ç–æ–∫
        for text, key, row in fields:
            # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—è
            Label(input_frame, text=text, font=('Arial', 10), bg='#f0f8ff').grid(row=row, column=0, padx=5, pady=5, sticky='e')
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
            entry = Entry(input_frame, width=25, font=('Arial', 10))
            entry.grid(row=row, column=1, padx=5, pady=5)
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª–µ –≤ —Å–ª–æ–≤–∞—Ä–µ
            self.entries[key] = entry

        # –§—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        button_frame = Frame(control_frame, bg='#f0f8ff')
        button_frame.pack(pady=10)
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons = [
            ("‚úÖ –î–æ–±–∞–≤–∏—Ç—å", '#27ae60', self.add_contact),    # –ó–µ–ª–µ–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            ("‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å", '#f39c12', self.update_contact), # –û—Ä–∞–Ω–∂–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            ("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", '#e74c3c', self.delete_contact),  # –ö—Ä–∞—Å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
            ("üßπ –û—á–∏—Å—Ç–∏—Ç—å", '#95a5a6', self.clear_entries)   # –°–µ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
        ]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        for i, (text, color, command) in enumerate(buttons):
            Button(button_frame, text=text, command=command, 
                   bg=color, fg='white', font=('Arial', 10, 'bold'),
                   width=12, height=1).grid(row=0, column=i, padx=8)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
    def on_select(self, event):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        if selected := self.tree.selection():
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            values = self.tree.item(selected[0])['values']
            # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            for entry, value in zip(self.entries.values(), values[1:]):
                entry.delete(0, END)    # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è
                entry.insert(0, value)  # –í—Å—Ç–∞–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è

    # –ú–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    def add_contact(self):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—Ä–æ–±–µ–ª–æ–≤
        name = self.entries['name'].get().strip()
        phone = self.entries['phone'].get().strip()
        email = self.entries['email'].get().strip()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if name and phone:
            try:
                # SQL-–∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç–∞–≤–∫—É –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
                self.c.execute("INSERT INTO contacts (name, phone, email) VALUES (%s, %s, %s)", 
                              (name, phone, email))
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î
                self.conn.commit()
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
                self.view_all()
                # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
                self.clear_entries()
                # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                messagebox.showinfo("–£—Å–ø–µ—Ö", "–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
            except mysql.connector.Error as err:
                # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ë–î
                messagebox.showerror("–û—à–∏–±–∫–∞ –ë–î", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏: {err}")
        else:
            # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—è—Ö
            messagebox.showwarning("–û—à–∏–±–∫–∞", "–ü–æ–ª—è '–§–ò–û' –∏ '–¢–µ–ª–µ—Ñ–æ–Ω' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!")

    # –ú–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
    def delete_contact(self):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω –ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        if selected := self.tree.selection():
            # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            contact_id = self.tree.item(selected[0])['values'][0]
            # –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
            if messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç?"):
                try:
                    # SQL-–∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
                    self.c.execute("DELETE FROM contacts WHERE id=%s", (contact_id,))
                    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î
                    self.conn.commit()
                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
                    self.view_all()
                    # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
                    self.clear_entries()
                except mysql.connector.Error as err:
                    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ë–î
                    messagebox.showerror("–û—à–∏–±–∫–∞ –ë–î", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {err}")
        else:
            # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            messagebox.showwarning("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!")

    # –ú–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
    def update_contact(self):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω –ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if selected := self.tree.selection():
            # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            contact_id = self.tree.item(selected[0])['values'][0]
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            name = self.entries['name'].get().strip()
            phone = self.entries['phone'].get().strip()
            email = self.entries['email'].get().strip()
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            if name and phone:
                try:
                    # SQL-–∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
                    self.c.execute("UPDATE contacts SET name=%s, phone=%s, email=%s WHERE id=%s", 
                                  (name, phone, email, contact_id))
                    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î
                    self.conn.commit()
                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
                    self.view_all()
                    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                    messagebox.showinfo("–£—Å–ø–µ—Ö", "–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                except mysql.connector.Error as err:
                    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ë–î
                    messagebox.showerror("–û—à–∏–±–∫–∞ –ë–î", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {err}")
            else:
                # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—è—Ö
                messagebox.showwarning("–û—à–∏–±–∫–∞", "–ü–æ–ª—è '–§–ò–û' –∏ '–¢–µ–ª–µ—Ñ–æ–Ω' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")
        else:
            # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
            messagebox.showwarning("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!")

    # –ú–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    def search_contact(self, event=None):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        search_term = self.search_entry.get().strip()
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—É—Å—Ç–æ–π –ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        if search_term:
            try:
                # SQL-–∑–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –ø–æ –≤—Å–µ–º –ø–æ–ª—è–º
                self.c.execute('''SELECT * FROM contacts 
                               WHERE name LIKE %s OR phone LIKE %s OR email LIKE %s''',
                              (f'%{search_term}%', f'%{search_term}%', f'%{search_term}%'))
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
                self.update_treeview(self.c.fetchall())
            except mysql.connector.Error as err:
                # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ë–î
                messagebox.showerror("–û—à–∏–±–∫–∞ –ë–î", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {err}")
        else:
            # –ï—Å–ª–∏ –ø–æ–∏—Å–∫ –ø—É—Å—Ç–æ–π - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
            self.view_all()

    # –ú–µ—Ç–æ–¥ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–∏—Å–∫–∞
    def clear_search(self):
        # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
        self.search_entry.delete(0, END)
        # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
        self.view_all()

    # –ú–µ—Ç–æ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    def view_all(self):
        try:
            # SQL-–∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –∏–º–µ–Ω–∏
            self.c.execute("SELECT * FROM contacts ORDER BY name")
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤—Å–µ–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
            self.update_treeview(self.c.fetchall())
        except mysql.connector.Error as err:
            # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ë–î
            messagebox.showerror("–û—à–∏–±–∫–∞ –ë–î", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {err}")

    # –ú–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–º–∏
    def update_treeview(self, rows):
        # –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
        self.tree.delete(*self.tree.get_children())
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É
        for row in rows:
            self.tree.insert('', 'end', values=row)

    # –ú–µ—Ç–æ–¥ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    def clear_entries(self):
        # –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        for entry in self.entries.values():
            entry.delete(0, END)

    # –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ - –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î
    def __del__(self):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –æ–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ
        if hasattr(self, 'conn') and self.conn.is_connected():
            # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫—É—Ä—Å–æ—Ä–∞
            self.c.close()
            # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î
            self.conn.close()

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if __name__ == '__main__':
    # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
    root = Tk()
    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app = PhoneBook(root)
    # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
    root.mainloop()
